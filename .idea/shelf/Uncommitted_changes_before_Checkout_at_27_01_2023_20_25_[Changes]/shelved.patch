Index: tests/on_the_future.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from locators.locators import Locators\r\nfrom pages.form_page import FormPage\r\n\r\n#  Допилим.\r\nclass TestPizdaTest:\r\n\r\n    def test_eto_pizda_test(self, start_driver):\r\n        all_thems = FormPage.all_elements_what_we_are_need\r\n        print(all_thems)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/on_the_future.py b/tests/on_the_future.py
--- a/tests/on_the_future.py	(revision 348f148525a408e12a282e589ae3bb37c580c158)
+++ b/tests/on_the_future.py	(date 1674837405501)
@@ -1,9 +1,9 @@
-from locators.locators import Locators
-from pages.form_page import FormPage
-
-#  Допилим.
-class TestPizdaTest:
-
-    def test_eto_pizda_test(self, start_driver):
-        all_thems = FormPage.all_elements_what_we_are_need
-        print(all_thems)
\ No newline at end of file
+# from locators.locators import Locators
+# from pages.form_page import FormPage
+#
+# #  Допилим.
+# class TestPizdaTest:
+#
+#     def test_eto_pizda_test(self, start_driver):
+#         all_thems = FormPage.all_elements_what_we_are_need
+#         print(all_thems)
\ No newline at end of file
Index: locators/locators.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from selenium.webdriver.common.by import By\r\n\r\n\r\nclass Locators:\r\n    LIST_OF_THEMES = (By.XPATH, \"//div[@class = 'title']\")\r\n    TEXT_FOR_ASSERT_INSIDE_HEAD = (By.XPATH, \"//h1/i\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/locators/locators.py b/locators/locators.py
--- a/locators/locators.py	(revision 348f148525a408e12a282e589ae3bb37c580c158)
+++ b/locators/locators.py	(date 1674837393535)
@@ -1,6 +1,6 @@
-from selenium.webdriver.common.by import By
-
-
-class Locators:
-    LIST_OF_THEMES = (By.XPATH, "//div[@class = 'title']")
-    TEXT_FOR_ASSERT_INSIDE_HEAD = (By.XPATH, "//h1/i")
+# from selenium.webdriver.common.by import By
+#
+#
+# class Locators:
+#     LIST_OF_THEMES = (By.XPATH, "//div[@class = 'title']")
+#     TEXT_FOR_ASSERT_INSIDE_HEAD = (By.XPATH, "//h1/i")
Index: pages/base_page.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from selenium.webdriver.support.ui import WebDriverWait as Wait\r\nfrom selenium.webdriver.support import expected_conditions as EC\r\n\r\n\r\nclass BasePage:\r\n    def __init__(self, driver, url):\r\n        self.driver = driver\r\n        self.url = url\r\n\r\n    def open(self):\r\n        self.driver.get(self.url)\r\n\r\n    def element_is_visible(self, locator, timeout=5):\r\n        return Wait(self.driver, timeout).until(EC.visibility_of_element_located(locator))\r\n\r\n    def elements_are_visible(self, locator, timeout=5):\r\n        return Wait(self.driver, timeout).until(EC.visibility_of_all_elements_located(locator))\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pages/base_page.py b/pages/base_page.py
--- a/pages/base_page.py	(revision 348f148525a408e12a282e589ae3bb37c580c158)
+++ b/pages/base_page.py	(date 1674837405531)
@@ -1,17 +1,17 @@
-from selenium.webdriver.support.ui import WebDriverWait as Wait
-from selenium.webdriver.support import expected_conditions as EC
-
-
-class BasePage:
-    def __init__(self, driver, url):
-        self.driver = driver
-        self.url = url
-
-    def open(self):
-        self.driver.get(self.url)
-
-    def element_is_visible(self, locator, timeout=5):
-        return Wait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
-
-    def elements_are_visible(self, locator, timeout=5):
-        return Wait(self.driver, timeout).until(EC.visibility_of_all_elements_located(locator))
+# from selenium.webdriver.support.ui import WebDriverWait as Wait
+# from selenium.webdriver.support import expected_conditions as EC
+#
+#
+# class BasePage:
+#     def __init__(self, driver, url):
+#         self.driver = driver
+#         self.url = url
+#
+#     def open(self):
+#         self.driver.get(self.url)
+#
+#     def element_is_visible(self, locator, timeout=5):
+#         return Wait(self.driver, timeout).until(EC.visibility_of_element_located(locator))
+#
+#     def elements_are_visible(self, locator, timeout=5):
+#         return Wait(self.driver, timeout).until(EC.visibility_of_all_elements_located(locator))
Index: pages/form_page.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from locators.locators import Locators\r\nfrom pages.base_page import BasePage\r\n\r\n\r\nclass FormPage(BasePage):\r\n\r\n    def all_elements_what_we_are_need(self):\r\n        thems_list = self.elements_are_visible(Locators.LIST_OF_THEMES).text\r\n        result_list = [i.text for i in thems_list]\r\n        print(result_list)\r\n        return result_list\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pages/form_page.py b/pages/form_page.py
--- a/pages/form_page.py	(revision 348f148525a408e12a282e589ae3bb37c580c158)
+++ b/pages/form_page.py	(date 1674837405524)
@@ -1,11 +1,11 @@
-from locators.locators import Locators
-from pages.base_page import BasePage
-
-
-class FormPage(BasePage):
-
-    def all_elements_what_we_are_need(self):
-        thems_list = self.elements_are_visible(Locators.LIST_OF_THEMES).text
-        result_list = [i.text for i in thems_list]
-        print(result_list)
-        return result_list
+# from locators.locators import Locators
+# from pages.base_page import BasePage
+#
+#
+# class FormPage(BasePage):
+#
+#     def all_elements_what_we_are_need(self):
+#         thems_list = self.elements_are_visible(Locators.LIST_OF_THEMES).text
+#         result_list = [i.text for i in thems_list]
+#         print(result_list)
+#         return result_list
Index: conftest.py
===================================================================
diff --git a/conftest.py b/conftest.py
deleted file mode 100644
--- a/conftest.py	(revision 348f148525a408e12a282e589ae3bb37c580c158)
+++ /dev/null	(revision 348f148525a408e12a282e589ae3bb37c580c158)
@@ -1,20 +0,0 @@
-import pytest
-from selenium import webdriver
-from selenium.webdriver.chrome.service import Service
-from webdriver_manager.chrome import ChromeDriverManager
-
-
-@pytest.fixture
-def fixture_for_set_driver():
-    driver_service = Service(ChromeDriverManager().install())
-    driver = webdriver.Chrome(service=driver_service)
-    return driver
-
-
-@pytest.fixture(scope='function')
-def setup(fixture_for_set_driver):
-    driver = fixture_for_set_driver
-    url = 'https://cyberleninka.ru/article/c/civil-engineering'
-    driver.get(url)
-    yield driver
-    driver.quit()
